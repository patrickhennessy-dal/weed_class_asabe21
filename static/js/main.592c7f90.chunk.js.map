{"version":3,"sources":["components/Logo_CPU.svg","components/Header.js","components/Intro.js","components/Classifier.js","components/Management.js","components/Acknowledgements.js","components/Cite.js","components/References.js","components/Disclaimer.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","className","src","logo","alt","Intro","href","target","rel","Classifier","useState","isModelLoading","setIsModelLoading","model","setModel","imageURL","setImageURL","results","setResults","resultsProb","setResultsProb","weedNames","imageRef","useRef","fileInputRef","loadModel","a","tf","console","log","identify","fromPixelsAsync","current","test_img","resizeBilinear","predict","prob","result","dataSync","useEffect","crossOrigin","ref","length","toFixed","type","accept","capture","onChange","e","files","url","URL","createObjectURL","onClick","click","Management","Acknowledgements","Cite","References","Disclaimer","id","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.592c7f90.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo_CPU.34e63f65.svg\";","import logo from './Logo_CPU.svg'\r\n\r\nconst Header = ({ title }) => {\r\n    return (\r\n        <header className = 'header'>\r\n            <h1 className='centreColumn'><img className = 'logoCPU' src = {logo} alt='Logo'/>CNN Weed Classifier</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Intro = () => {\r\n    return (\r\n        <div className='intro text centreColumn'>\r\n            <p>This is an application for classifying weeds in wild blueberry fields using the MobileNet (Howard et al., 2017) Convolutional Neural Network. The currently supported weeds are hair fescue, sheep sorrel, hawkweed, goldenrod, and bunchberry. MobileNet was trained on Google Colab (Bisong, 2019) using TensorFlow (Abadi et al., 2015) and Keras (Chollet et al., 2020). The website runs on the ReactJS framework (Facebook Inc. & Walke, 2021) and processes the MobileNet model in your browser using Tensorflow.JS (Smilkov et al., 2019). This applicaton was presented at ASABE AIM 2021 with a <a href='https://github.com/patrickhennessy-dal/weed_class_asabe21/blob/master/src/assets/hennessy_asabe21_poster.pdf' target='_blank' rel='noopener noreferrer'>corresponding poster</a> in the conference proceedings.</p>\r\n            <p>To use the application, capture an image of the weed from directly above from a height of around 1 metre. Alternatively, download some <a href='https://www.dropbox.com/sh/tk734ttl2k6yw4n/AAAoJ4cJfgmjSatJYAh-JhYla?dl=0' target='_blank' rel='noopener noreferrer'>sample images</a>. Then, upload the image and let the deep learning algorithm do the work!</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Intro\r\n","import React from 'react'\r\nimport { useState, useEffect, useRef } from 'react'\r\nimport * as tf from '@tensorflow/tfjs'\r\n\r\nconst Classifier = () => {\r\n    const[isModelLoading, setIsModelLoading] = useState(false)\r\n    const[model, setModel] = useState(null)\r\n    const[imageURL, setImageURL] = useState(null);\r\n    const[results, setResults] = useState([])\r\n    const[resultsProb, setResultsProb] = useState([])\r\n    const weedNames = ['Goldenrod', 'Hawkweed', 'Bunchberry', 'Sheep Sorrel', 'No Weeds', 'Hair Fescue']\r\n\r\n    const imageRef = useRef()\r\n    const fileInputRef = useRef()\r\n\r\n    const loadModel = async () => {\r\n        setIsModelLoading(true)\r\n        try {\r\n        const model = await tf.loadLayersModel('https://cdn.jsdelivr.net/gh/patrickhennessy-dal/modelZoo/ASABE21/modelMN/model.json')\r\n        setModel(model)\r\n        setIsModelLoading(false)\r\n\r\n        } catch(error) {\r\n        console.log(error)\r\n        setIsModelLoading(false)\r\n        }\r\n    }\r\n\r\n    const uploadImage = e => {\r\n        const { files } = e.target\r\n        if (files.length > 0) {\r\n            const url = URL.createObjectURL(files[0])\r\n            setImageURL(url)\r\n        } else {\r\n            setImageURL(null)\r\n        }\r\n    }\r\n\r\n    const identify = async () => {\r\n        let test_img = await tf.browser.fromPixelsAsync(imageRef.current)\r\n        test_img = tf.expandDims(test_img,0)\r\n        test_img = tf.image.resizeBilinear(test_img, [224,224])\r\n        const prob = await model.predict(test_img)\r\n        const result = tf.argMax(prob,1)\r\n        setResults(weedNames[result.dataSync()[0]])\r\n        setResultsProb(prob.dataSync()[result.dataSync()[0]])\r\n    }\r\n\r\n    const triggerUpload = () => {\r\n        fileInputRef.current.click()\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadModel()\r\n    }, [])\r\n\r\n    if (isModelLoading) {\r\n        return <h2 className='centreColumn'>Please wait...</h2>\r\n    }\r\n\r\n    //console.log(results)\r\n\r\n    \r\n    return (\r\n        <div className='classifier'>\r\n            <div className='mainWrapper centreColumn'>\r\n                <div className='mainContent'>\r\n                    <div className='imageHolder'>\r\n                        {imageURL && <img src={imageURL} className='image' alt='Upload Preview' crossOrigin='anonymous' ref={imageRef}/>}\r\n                    </div>\r\n                    {results.length > 0 && <div className='resultsHolder text'>\r\n                          <div className='result' key={results.className}>\r\n                            <span className='name'><p>Result: {results} </p></span>\r\n                            <span className='confidence'>Confidence level: {(resultsProb * 100).toFixed(2)} %</span>\r\n                          </div>\r\n                    </div>}  \r\n                </div>\r\n                <div className='inputHolder'>\r\n                <input\r\n                  type='file'\r\n                  accept='image/*'\r\n                  capture='camera'\r\n                  className='uploadInput'\r\n                  onChange={uploadImage}\r\n                  ref={fileInputRef}\r\n                />\r\n                <div className='btnHolder'>\r\n                    <button className='ctrlBtn' onClick={triggerUpload}>Upload Image</button>\r\n                    {imageURL && <button className='ctrlBtn' onClick={identify}>Identify Image</button>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Classifier\r\n","import React from 'react'\r\n\r\nconst Management = () => {\r\n    return (\r\n        <div className='management text centreColumn'>\r\n            <h2>Management Options<a href='#disclaimer'><i>*</i></a></h2>\r\n            <p>Please consult Perennia's guide to weed, insect, and disease management in wild blueberry. [<a href = 'https://www.perennia.ca/wp-content/uploads/2018/03/Wild-Blueberry-WEED-INSECT-DISEASE-GUIDE-2021-WEB.pdf' target='_blank' rel='noopener noreferrer'>pdf link</a>]</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Management","const Acknowledgements = () => {\r\n    return (\r\n        <div className='text centreColumn'>\r\n            <h2>Acknowledgements</h2>\r\n            <p>This work was supported by Mitacs through the Mitacs Accelerate Program (IT23150), in partnership with the Wild Blueberry Producers Association of Nova Scotia. Additional funding for this research was provided by Natural Sciences and Engineering Research Council of Canada Discovery Grants Program (RGPIN-06295-2019), Doug Bragg Enterprises, Ltd, and New Brunswick Canadian Agricultural Partnership (CAP). The authors would like to thank the wild blueberry growers in Nova Scotia for use of their fields during image collection. Also, the authors acknowledge the efforts of the mechanized systems and precision agriculture research teams at Dalhousie University’s Faculty of Agriculture.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Acknowledgements\r\n","import React from 'react'\r\n\r\nconst Cite = () => {\r\n    return (\r\n        <div className = 'cite text centreColumn'>\r\n            <h2>Cite</h2>\r\n            <p>If you wish to use this work, please cite our <a href='https://github.com/patrickhennessy-dal/weed_class_asabe21/blob/master/src/assets/hennessy_asabe21_poster.pdf' target='_blank' rel='noopener noreferrer'>poster</a> in the ASABE AIM 2021 conference proceedings:</p>\r\n            {/*<pre><code className='citeCode'>{`\r\n                const citation = () => {\r\n                    title =     'Convolutional Neural Network Web Application for Aiding Field Management in Wild Blueberry';\r\n                    authors =   ['Patrick J. Hennessy', 'Travis J. Esau', 'Arnold W. Schumann', 'Qamar U. Zaman', 'Scott N. White', 'Aitazaz A. Farooque'];\r\n                    year =      2021;\r\n                    procTitle = '2021 ASABE Annual International Meeting';\r\n                    procCity =  'Virtual';\r\n                };    \r\n            `}</code></pre>*/}\r\n            <pre className='citeCode'>\r\n                <span>\r\n{`const citation = () => {\r\n    title       = 'Convolutional Neural Network Web Application for Aiding Field Management in Wild Blueberry';\r\n    authors     = ['Patrick J. Hennessy', 'Travis J. Esau', 'Arnold W. Schumann', 'Qamar U. Zaman', 'Scott N. White', 'Aitazaz A. Farooque'];\r\n    year        = 2021;\r\n    procTitle   = '2021 ASABE Annual International Meeting';\r\n    procCity    = 'Virtual';\r\n};`}\r\n                </span>    \r\n            </pre>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cite\r\n","import React from 'react'\r\n\r\nconst References = () => {\r\n    return (\r\n        <div className='references text centreColumn'>\r\n            <h2>References</h2>\r\n            <p className='reference'>Abadi, M., Agarwal, A., Barnham, P., Brevdo, E., Chen, Z., Citro, C., et al. (2015). TensorFlow: Large-Scale Machine Learning on Heterogeneous Distributed Systems. In <i>Google Research.</i> <a target='_blank' rel='noopener noreferrer' href='https://doi.org/10.1080/09548980500300507'>https://doi.org/10.1080/09548980500300507</a></p>\r\n            <p className='reference'>Bisong, E. (2019). Google Colaboratory. In <i>Building Machine Learning and Deep Learning Models on Google Cloud Platform</i> (pp. 59–64). Apress Media LLC. <a target='_blank' rel='noopener noreferrer' href='https://doi.org/10.1007/978-1-4842-4470-8_7'>https://doi.org/10.1007/978-1-4842-4470-8_7</a></p>\r\n            <p className='reference'>Chollet, F., et al. (2020). <i>Keras.</i> GitHub Repository. <a target='_blank' rel='noopener noreferrer' href='https://github.com/keras-team/keras'>https://github.com/keras-team/keras</a></p>\r\n            <p className='reference'>Eriavbe, M. (2015). <i>Management of Hawkweed (Hieracium spp.) in Wild Blueberry Fields on Prince Edward Island</i> [M.Sc. Thesis, Dalhousie University]. <a target='_blank' rel='noopener noreferrer' href='http://hdl.handle.net/10222/60770'>http://hdl.handle.net/10222/60770</a></p>\r\n            <p className='reference'>Facebook Inc., & Walke, J. (2021). <i>React - A JavaScript library for building user interfaces.</i> <a target='_blank' rel='noopener noreferrer' href='https://reactjs.org/'>https://reactjs.org/</a></p>\r\n            <p className='reference'>Farooq, M. H. (2018). <i>Management of goldenrods (Solidago spp.) in wild blueberry (Vaccinium angustifolium Ait.) fields</i> [M.Sc. Thesis, Dalhousie University]. <a target='_blank' rel='noopener noreferrer' href='http://hdl.handle.net/10222/74162'>http://hdl.handle.net/10222/74162</a></p>\r\n            <p className='reference'>Government of New Brunswick. (2017). <i>Wild Blueberry IPM, Weed Management Guide</i>. Department of Agriculture, Aquaculture and Fisheries. <a href='https://www2.gnb.ca/content/dam/gnb/Departments/10/pdf/Agriculture/WildBlueberries-BleuetsSauvages/C420-E.pdf' target='_blank' rel='noopener noreferrer'>https://www2.gnb.ca/content/dam/gnb/Departments/10/pdf/Agriculture/WildBlueberries-BleuetsSauvages/C420-E.pdf</a></p>\r\n            <p className='reference'>Howard, A. G., Zhu, M., Chen, B., Kalenichenko, D., Wang, W., Weyand, T., Andreetto, M., & Adam, H. (2017). MobileNets: Efficient convolutional neural networks for mobile vision applications. <i>ArXiv.</i> <a target='_blank' rel='noopener noreferrer' href='https://arxiv.org/abs/1704.04861'>https://arxiv.org/abs/1704.04861</a></p>\r\n            <p className='reference'>Hughes, A., White, S. N., Boyd, N. S., Hildebrand, P., & Cutler, C. G. (2016). Red sorrel management and potential effect of red sorrel pollen on <i>Botrytis cinerea</i> spore germination and infection of lowbush blueberry (<i>Vaccinium angustifolium</i> Ait.) flowers. <i>Canadian Journal of Plant Science</i>, 96(4), 590–596. <a target='_blank' rel='noopener noreferrer' href='https://doi.org/10.1139/cjps-2015-0285'>https://doi.org/10.1139/cjps-2015-0285</a></p>\r\n            <p className='reference'>Kennedy, K. J., Boyd, N. S., & Nams, V. O. (2010). Hexazinone and fertilizer impacts on sheep sorrel (<i>Rumex acetosella</i>) in wild blueberry. Weed Science, 58(3), 317–322. <a target='_blank' rel='noopener noreferrer' href='https://doi.org/10.1614/WS-D-09-00081.1'>https://doi.org/10.1614/WS-D-09-00081.1</a></p>\r\n            <p className='reference'>Smilkov, D., Thorat, N., Assogba, Y., Yuan, A., Kreeger, N., Yu, P., et al. (2019). Tensorflow.JS: Machine learning for the web and beyond. <i>ArXiv.</i> <a target='_blank' rel='noopener noreferrer' href='https://arxiv.org/abs/1901.05350'>https://arxiv.org/abs/1901.05350</a></p>\r\n            <p className='reference'>White, S. N. (2019). Evaluation of herbicides for hair fescue (Festuca filiformis) management and potential seedbank reduction in lowbush blueberry. <i>Weed Technology</i>, 33(6), 840–846. <a target='_blank' rel='noopener noreferrer' href='https://doi.org/10.1017/wet.2019.71'>https://doi.org/10.1017/wet.2019.71</a></p>\r\n            <p className='reference'>Yarborough, D. E. (2009). <i>255-Tribenuron Methyl for Bunchberry Control in Wild Blueberries.</i> The University of Maine Cooperative Extension. <a target='_blank' rel='noopener noreferrer' href='https://extension.umaine.edu/blueberries/factsheets/weeds/255-tribenuron-methyl-for-bunchberry-control-in-wild-blueberries/'>https://extension.umaine.edu/blueberries/factsheets/weeds/255-tribenuron-methyl-for-bunchberry-control-in-wild-blueberries/</a></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default References\r\n","import React from 'react'\r\n\r\nconst Disclaimer = () => {\r\n    return (\r\n        <div className='disclaimer text centreColumn' id='disclaimer'>\r\n            <p><i className='disclaimerStar'>*</i>Patrick J. Hennessy and Dalhousie University in collaboration with the Wild Blueberry Producers Association of Nova Scotia (WBPANS) [“The Owners”] compiled this Application to help wild blueberry farmers identify weeds commonly found in wild blueberry fields. The Application relies on information and data obtained from third party sources over which The Owners have no control, and which information is continuously changing and therefore can cease to be current and accurate. Pesticide labels are the best source of information and should always be consulted prior to using a product. The label is the best source of information on: registered crop uses, rates, days to harvest, compatibility with other pesticides, toxicity and other special information on its effective and safe use. The Owners do not make any representations as to the accuracy of the Application, and specifically disclaims all warranties, expressed or implied, with respect to its use. The Owners do not assume any liability for any losses caused by the use of a pesticide mentioned in this Application, including without limitation crop loss, animal loss, or health, safety or environmental hazard. By accessing, printing, or using this Application each user agrees to release, waive, and hold harmless The Owners from all liability or claims for loss however incurred. This Application is meant to be used only as a reference for identification of weeds in wild blueberry production. Where there are brand names of a specific active ingredient registered in Canada, they are for reference purpose only and as such do not form an endorsement of one brand over another. If you have used or have purchased a generic product not specifically in this Application but the generic product has your crop and pest on the label, always follow that product label. If any information in this Application or any other publication conflicts with the information on the label, always use the label recommendation. Pesticides are only to be used in an approved manner and that are in accordance with that of the buyer/processor.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Disclaimer\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className='footer'>\r\n            <p className='centreColumn'>&#169; 2021 Patrick J. Hennessy, Dalhousie University, and The Wild Blueberry Producers Association of Nova Scotia</p>\r\n            <p className='centreColumn'><a className='contactLink' href='mailto:Patrick.Hennessy@Dal.ca'>Contact</a></p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import Header from './components/Header'\nimport Intro from './components/Intro'\nimport Classifier from './components/Classifier'\nimport Management from './components/Management'\nimport Acknowledgements from './components/Acknowledgements'\nimport Cite from './components/Cite'\nimport References from './components/References'\nimport Disclaimer from './components/Disclaimer'\nimport Footer from './components/Footer'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <Intro />\n      <Classifier />\n      <Management />\n      <Acknowledgements />\n      <Cite />\n      <Disclaimer />\n      <References />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}